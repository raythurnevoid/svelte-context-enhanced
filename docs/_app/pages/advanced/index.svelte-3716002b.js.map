{"version":3,"file":"index.svelte-3716002b.js","sources":["../../../../../../src/components/examples/advanced/AdvancedExampleContext.ts","../../../../../../src/components/examples/advanced/AdvancedExampleChild.svelte","../../../../../../src/components/examples/advanced/AdvancedExample.svelte","../../../../../../src/routes/advanced/index.svelte"],"sourcesContent":["import type { ContextKey } from \"@raythurnevoid/svelte-context-enhanced\";\r\n\r\nexport const contextKey: ContextKey<string> = {};\r\n","<script lang=\"ts\">\r\n\timport { getContext } from \"@raythurnevoid/svelte-context-enhanced\";\r\n\timport { contextKey } from \"./AdvancedExampleContext\";\r\n\r\n\tconst value = getContext(contextKey); // inferred type is string\r\n</script>\r\n\r\n{value}\r\n","<script lang=\"ts\">\r\n\timport AdvancedExampleChild from \"./AdvancedExampleChild.svelte\";\r\n\timport { setContext } from \"@raythurnevoid/svelte-context-enhanced\";\r\n\timport { contextKey } from \"./AdvancedExampleContext\";\r\n\r\n\tsetContext(contextKey, \"value\");\r\n\t// setContext(contextKey, 123); // This will fail type checking\r\n</script>\r\n\r\n<AdvancedExampleChild />\r\n","<script context=\"module\" lang=\"ts\">\r\n\timport type { Load } from \"@sveltejs/kit\";\r\n\timport { getFileContent } from \"../../utils\";\r\n\r\n\texport const load: Load = async function ({ fetch }) {\r\n\t\tasync function getTypingsSource() {\r\n\t\t\treturn await getFileContent(\r\n\t\t\t\tfetch,\r\n\t\t\t\t\"node_modules/@raythurnevoid/svelte-context-enhanced/svelte-typed-context.d.ts\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tasync function getExampleSource() {\r\n\t\t\treturn await getFileContent(\r\n\t\t\t\tfetch,\r\n\t\t\t\t\"src/components/examples/advanced/AdvancedExample.svelte\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tasync function getExampleChildSource() {\r\n\t\t\treturn await getFileContent(\r\n\t\t\t\tfetch,\r\n\t\t\t\t\"src/components/examples/advanced/AdvancedExampleChild.svelte\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tasync function getExampleContextSource() {\r\n\t\t\treturn await getFileContent(\r\n\t\t\t\tfetch,\r\n\t\t\t\t\"src/components/examples/advanced/AdvancedExampleContext.ts\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tprops: {\r\n\t\t\t\ttypingsSource: await getTypingsSource(),\r\n\t\t\t\texampleSource: await getExampleSource(),\r\n\t\t\t\texampleChildSource: await getExampleChildSource(),\r\n\t\t\t\texampleContextSource: await getExampleContextSource(),\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\timport {\r\n\t\tPageTitle,\r\n\t\tSectionTitle,\r\n\t\tExampleContainer,\r\n\t} from \"#src/components/main/index\";\r\n\timport { Code, FileSourceSnippet } from \"#src/components/main/Code/index\";\r\n\timport { PageContent, Footer } from \"#src/layout/index\";\r\n\timport { AdvancedExample } from \"#src/components/examples/advanced/index\";\r\n\timport { base } from \"$app/paths\";\r\n\r\n\texport let exampleSource: string;\r\n\texport let exampleChildSource: string;\r\n\texport let exampleContextSource: string;\r\n\texport let typingsSource: string;\r\n</script>\r\n\r\n<main>\r\n\t<PageContent>\r\n\t\t<PageTitle>Advanced Usage</PageTitle>\r\n\t\t<p>\r\n\t\t\tYou can create your own context typings and implementations using the\r\n\t\t\tbasic key interface <code>{`ContextKey<T>`}</code> and the functions\r\n\t\t\t<code>{`setContext`}</code>\r\n\t\t\tand <code>{`getContext`}</code>.\r\n\t\t</p>\r\n\r\n\t\t<FileSourceSnippet\r\n\t\t\tfileName=\"AdvancedExample.svelte\"\r\n\t\t\tsource={exampleSource}\r\n\t\t/>\r\n\r\n\t\t<FileSourceSnippet\r\n\t\t\tfileName=\"AdvancedExampleChild.svelte\"\r\n\t\t\tsource={exampleChildSource}\r\n\t\t/>\r\n\r\n\t\t<FileSourceSnippet\r\n\t\t\tfileName=\"AdvancedExampleContext.ts\"\r\n\t\t\tsource={exampleContextSource}\r\n\t\t/>\r\n\r\n\t\t<SectionTitle>Result</SectionTitle>\r\n\t\t<ExampleContainer>\r\n\t\t\t<AdvancedExample />\r\n\t\t</ExampleContainer>\r\n\r\n\t\t<SectionTitle>API</SectionTitle>\r\n\t\t<p>\r\n\t\t\t<code>createContext</code> takes no arguments but wants you to set it's generic\r\n\t\t\ttype in order to type the given context setter and getter.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<Code lang=\"ts\" source={typingsSource} />\r\n\t\t</p>\r\n\t</PageContent>\r\n</main>\r\n<Footer prev={{ label: \"CONTEXT STORE\", href: `${base}/store` }} />\r\n"],"names":[],"mappings":";;;;;;MAEa,aAAiC;;;;;eCK7C;;;4BAAA;;;;;;;;;;;;;;;QAHM,QAAQ,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCzB,aAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCoEb;;;;;;cAKA;;;;;;cAKA;;;;;;;;;;;;;;;;;;;;;;;;cAcgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAxBhB;;;;4CAKA;;;;4CAKA;;;;;;;;;;;;;;;;;;;+BAcgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIX,OAAO;AAAA,QAAiB,SAAS;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IArGf,qBAAA,SAAA,YAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIpB,kBAA+B;;;;qBAE7B,eACZ,OACA;AAAA;AAAA;;;qBAKY,eACZ,OACA;AAAA;AAAA;;;qBAKY,eACZ,OACA;AAAA;AAAA;;;qBAKY,eACZ,OACA;AAAA;AAAA;;MAKD;QACC,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,QAC1B,4BAA4B;AAAA;AAAA;AAAA;AAAA;;QAiBpB;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;"}