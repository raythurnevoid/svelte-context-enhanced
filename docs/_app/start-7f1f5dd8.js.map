{"version":3,"file":"start-7f1f5dd8.js","sources":["../../../build/generated/root.svelte","../../../build/generated/manifest.js","../../../build/runtime/chunks/utils.js","../../../build/runtime/internal/start.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit â€” do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\texport let props_3 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n<svelte:component this={components[0]} {...(props_0 || {})}>\n\t{#if components[1]}\n\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t{#if components[2]}\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}>\n\t\t\t\t\t{#if components[3]}\n\t\t\t\t\t\t<svelte:component this={components[3]} {...(props_3 || {})}/>\n\t\t\t\t\t{/if}\n\t\t\t\t</svelte:component>\n\t\t\t{/if}\n\t\t</svelte:component>\n\t{/if}\n</svelte:component>\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}\n\n<style>\n\t#svelte-announcer {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tclip: rect(0 0 0 0);\n\t\tclip-path: inset(50%);\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\twidth: 1px;\n\t\theight: 1px;\n\t}\n</style>","const c = [\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\__layout.svelte\"),\n\t() => import(\"..\\\\components\\\\error.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sveltekit\\\\__layout.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sveltekit\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sveltekit\\\\about.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sveltekit\\\\todos\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\advanced\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\about.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\basic\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\store\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sub\\\\__layout.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sub\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\..\\\\src\\\\routes\\\\sub\\\\about.svelte\")\n];\n\nconst d = decodeURIComponent;\n\nexport const routes = [\n\t// src/routes/index.svelte\n\t[/^\\/$/, [c[0], c[2]], [c[1]]],\n\n\t// src/routes/test.svelte.html\n\t[/^\\/test\\.svelte$/],\n\n\t// src/routes/sveltekit/index.svelte\n\t[/^\\/sveltekit\\/?$/, [c[0], c[3], c[4]], [c[1]]],\n\n\t// src/routes/sveltekit/about.svelte\n\t[/^\\/sveltekit\\/about\\/?$/, [c[0], c[3], c[5]], [c[1]]],\n\n\t// src/routes/sveltekit/todos/index.json.ts\n\t[/^\\/sveltekit\\/todos\\.json$/],\n\n\t// src/routes/sveltekit/todos/index.svelte\n\t[/^\\/sveltekit\\/todos\\/?$/, [c[0], c[3], c[6]], [c[1]]],\n\n\t// src/routes/sveltekit/todos/[uid].json.ts\n\t[/^\\/sveltekit\\/todos\\/([^/]+?)\\.json$/],\n\n\t// src/routes/advanced/index.svelte\n\t[/^\\/advanced\\/?$/, [c[0], c[7]], [c[1]]],\n\n\t// src/routes/about.svelte\n\t[/^\\/about\\/?$/, [c[0], c[8]], [c[1]]],\n\n\t// src/routes/basic/index.svelte\n\t[/^\\/basic\\/?$/, [c[0], c[9]], [c[1]]],\n\n\t// src/routes/store/index.svelte\n\t[/^\\/store\\/?$/, [c[0], c[10]], [c[1]]],\n\n\t// src/routes/api/get-file-content.[encodedBase64Path].ts\n\t[/^\\/api\\/get-file-content\\.([^/]+?)$/],\n\n\t// src/routes/sub/index.svelte\n\t[/^\\/sub\\/?$/, [c[0], c[11], c[12]], [c[1]]],\n\n\t// src/routes/sub/about.svelte\n\t[/^\\/sub\\/about\\/?$/, [c[0], c[11], c[13]], [c[1]]]\n];\n\nexport const fallback = [c[0](), c[1]()];","/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport { get_base_uri as g };\n","import Root from '../../generated/root.svelte';\nimport { routes, fallback } from '../../generated/manifest.js';\nimport { g as get_base_uri } from '../chunks/utils.js';\nimport { writable } from 'svelte/store';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/**\n * @param {Node} node\n * @returns {HTMLAnchorElement | SVGAElement}\n */\nfunction find_anchor(node) {\n\twhile (node && node.nodeName.toUpperCase() !== 'A') node = node.parentNode; // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement} */ (node);\n}\n\nclass Router {\n\t/** @param {{\n\t *    base: string;\n\t *    routes: import('types/internal').CSRRoute[];\n\t *    trailing_slash: import('types/internal').TrailingSlash;\n\t * }} opts */\n\tconstructor({ base, routes, trailing_slash }) {\n\t\tthis.base = base;\n\t\tthis.routes = routes;\n\t\tthis.trailing_slash = trailing_slash;\n\t}\n\n\t/** @param {import('./renderer').Renderer} renderer */\n\tinit(renderer) {\n\t\t/** @type {import('./renderer').Renderer} */\n\t\tthis.renderer = renderer;\n\t\trenderer.router = this;\n\n\t\tthis.enabled = true;\n\n\t\tif ('scrollRestoration' in history) {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Adopted from Nuxt.js\n\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t// scrolling position.\n\t\taddEventListener('beforeunload', () => {\n\t\t\thistory.scrollRestoration = 'auto';\n\t\t});\n\n\t\t// Setting scrollRestoration to manual again when returning to this page.\n\t\taddEventListener('load', () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t});\n\n\t\t// There's no API to capture the scroll location right before the user\n\t\t// hits the back/forward button, so we listen for scroll events\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet scroll_timer;\n\t\taddEventListener('scroll', () => {\n\t\t\tclearTimeout(scroll_timer);\n\t\t\tscroll_timer = setTimeout(() => {\n\t\t\t\t// Store the scroll location in the history\n\t\t\t\t// This will persist even if we navigate away from the site and come back\n\t\t\t\tconst new_state = {\n\t\t\t\t\t...(history.state || {}),\n\t\t\t\t\t'sveltekit:scroll': scroll_state()\n\t\t\t\t};\n\t\t\t\thistory.replaceState(new_state, document.title, window.location.href);\n\t\t\t}, 50);\n\t\t});\n\n\t\t/** @param {MouseEvent} event */\n\t\tconst trigger_prefetch = (event) => {\n\t\t\tconst a = find_anchor(/** @type {Node} */ (event.target));\n\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\tthis.prefetch(new URL(/** @type {string} */ (a.href)));\n\t\t\t}\n\t\t};\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\t/** @param {MouseEvent} event */\n\t\tconst handle_mousemove = (event) => {\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\ttrigger_prefetch(event);\n\t\t\t}, 20);\n\t\t};\n\n\t\taddEventListener('touchstart', trigger_prefetch);\n\t\taddEventListener('mousemove', handle_mousemove);\n\n\t\t/** @param {MouseEvent} event */\n\t\taddEventListener('click', (event) => {\n\t\t\tif (!this.enabled) return;\n\n\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\tif (event.button || event.which !== 1) return;\n\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\tif (event.defaultPrevented) return;\n\n\t\t\tconst a = find_anchor(/** @type {Node} */ (event.target));\n\t\t\tif (!a) return;\n\n\t\t\tif (!a.href) return;\n\n\t\t\t// check if link is inside an svg\n\t\t\t// in this case, both href and target are always inside an object\n\t\t\tconst svg = typeof a.href === 'object' && a.href.constructor.name === 'SVGAnimatedString';\n\t\t\tconst href = String(svg ? /** @type {SVGAElement} */ (a).href.baseVal : a.href);\n\n\t\t\tif (href === location.href) {\n\t\t\t\tif (!location.hash) event.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if tag has\n\t\t\t// 1. 'download' attribute\n\t\t\t// 2. 'rel' attribute includes external\n\t\t\tconst rel = a.getAttribute('rel')?.split(/\\s+/);\n\n\t\t\tif (a.hasAttribute('download') || (rel && rel.includes('external'))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if <a> has a target\n\t\t\tif (svg ? /** @type {SVGAElement} */ (a).target.baseVal : a.target) return;\n\n\t\t\tconst url = new URL(href);\n\n\t\t\tif (!this.owns(url)) return;\n\n\t\t\tconst noscroll = a.hasAttribute('sveltekit:noscroll');\n\n\t\t\thistory.pushState({}, '', url.href);\n\t\t\tthis._navigate(url, noscroll ? scroll_state() : null, false, [], url.hash);\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\taddEventListener('popstate', (event) => {\n\t\t\tif (event.state && this.enabled) {\n\t\t\t\tconst url = new URL(location.href);\n\t\t\t\tthis._navigate(url, event.state['sveltekit:scroll'], false, []);\n\t\t\t}\n\t\t});\n\n\t\t// make it possible to reset focus\n\t\tdocument.body.setAttribute('tabindex', '-1');\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(history.state || {}, '', location.href);\n\t}\n\n\t/** @param {URL} url */\n\towns(url) {\n\t\treturn url.origin === location.origin && url.pathname.startsWith(this.base);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {import('./types').NavigationInfo}\n\t */\n\tparse(url) {\n\t\tif (this.owns(url)) {\n\t\t\tconst path = decodeURIComponent(url.pathname.slice(this.base.length) || '/');\n\n\t\t\tconst routes = this.routes.filter(([pattern]) => pattern.test(path));\n\n\t\t\tconst query = new URLSearchParams(url.search);\n\t\t\tconst id = `${path}?${query}`;\n\n\t\t\treturn { id, routes, path, query };\n\t\t}\n\t}\n\n\t/**\n\t * @typedef {Parameters<typeof import('$app/navigation').goto>} GotoParams\n\t *\n\t * @param {GotoParams[0]} href\n\t * @param {GotoParams[1]} opts\n\t * @param {string[]} chain\n\t */\n\tasync goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} } = {},\n\t\tchain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (this.enabled && this.owns(url)) {\n\t\t\thistory[replaceState ? 'replaceState' : 'pushState'](state, '', href);\n\t\t\treturn this._navigate(url, noscroll ? scroll_state() : null, keepfocus, chain, url.hash);\n\t\t}\n\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {\n\t\t\t/* never resolves */\n\t\t});\n\t}\n\n\tenable() {\n\t\tthis.enabled = true;\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync prefetch(url) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\treturn this.renderer.load(info);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {{ x: number, y: number }} scroll\n\t * @param {boolean} keepfocus\n\t * @param {string[]} chain\n\t * @param {string} [hash]\n\t */\n\tasync _navigate(url, scroll, keepfocus, chain, hash) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to navigate to a URL that does not belong to this app');\n\t\t}\n\n\t\t// remove trailing slashes\n\t\tif (info.path !== '/') {\n\t\t\tconst has_trailing_slash = info.path.endsWith('/');\n\n\t\t\tconst incorrect =\n\t\t\t\t(has_trailing_slash && this.trailing_slash === 'never') ||\n\t\t\t\t(!has_trailing_slash &&\n\t\t\t\t\tthis.trailing_slash === 'always' &&\n\t\t\t\t\t!info.path.split('/').pop().includes('.'));\n\n\t\t\tif (incorrect) {\n\t\t\t\tinfo.path = has_trailing_slash ? info.path.slice(0, -1) : info.path + '/';\n\t\t\t\thistory.replaceState({}, '', `${this.base}${info.path}${location.search}`);\n\t\t\t}\n\t\t}\n\n\t\tthis.renderer.notify({\n\t\t\tpath: info.path,\n\t\t\tquery: info.query\n\t\t});\n\n\t\tawait this.renderer.update(info, chain, false);\n\n\t\tif (!keepfocus) {\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t\tconst deep_linked = hash && document.getElementById(hash.slice(1));\n\t\tif (scroll) {\n\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t} else if (deep_linked) {\n\t\t\t// scroll is an element id (from a hash), we need to compute y\n\t\t\tscrollTo(0, deep_linked.getBoundingClientRect().top + scrollY);\n\t\t} else {\n\t\t\tscrollTo(0, 0);\n\t\t}\n\t}\n}\n\n/** @param {import('types/hooks').StrictBody} value */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\n/**\n * @param {import('types/page').LoadOutput} loaded\n * @returns {import('types/internal').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\t// TODO should this behaviour be dev-only?\n\n\tif (loaded.error) {\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\t\tconst status = loaded.status;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code â€” defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error('\"redirect\" property returned from load() must be a string')\n\t\t\t};\n\t\t}\n\t}\n\n\treturn /** @type {import('types/internal').NormalizedLoadOutput} */ (loaded);\n}\n\n/** @param {any} value */\nfunction page_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} opts\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = typeof resource === 'string' ? resource : resource.url;\n\n\tlet selector = `script[data-type=\"svelte-data\"][data-url=\"${url}\"]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn fetch(resource, opts);\n}\n\n/** @typedef {import('types/internal').CSRComponent} CSRComponent */\n\nclass Renderer {\n\t/** @param {{\n\t *   Root: CSRComponent;\n\t *   fallback: [CSRComponent, CSRComponent];\n\t *   target: Node;\n\t *   session: any;\n\t *   host: string;\n\t * }} opts */\n\tconstructor({ Root, fallback, target, session, host }) {\n\t\tthis.Root = Root;\n\t\tthis.fallback = fallback;\n\t\tthis.host = host;\n\n\t\t/** @type {import('./router').Router} */\n\t\tthis.router = null;\n\n\t\tthis.target = target;\n\n\t\tthis.started = false;\n\n\t\tthis.session_id = 1;\n\t\tthis.invalid = new Set();\n\t\tthis.invalidating = null;\n\n\t\t/** @type {import('./types').NavigationState} */\n\t\tthis.current = {\n\t\t\tpage: null,\n\t\t\tsession_id: null,\n\t\t\tbranch: []\n\t\t};\n\n\t\t/** @type {Map<string, import('./types').NavigationResult>} */\n\t\tthis.cache = new Map();\n\n\t\tthis.loading = {\n\t\t\tid: null,\n\t\t\tpromise: null\n\t\t};\n\n\t\tthis.stores = {\n\t\t\tpage: page_store({}),\n\t\t\tnavigating: writable(null),\n\t\t\tsession: writable(session)\n\t\t};\n\n\t\tthis.$session = null;\n\n\t\tthis.root = null;\n\n\t\tlet ready = false;\n\t\tthis.stores.session.subscribe(async (value) => {\n\t\t\tthis.$session = value;\n\n\t\t\tif (!ready || !this.router) return;\n\t\t\tthis.session_id += 1;\n\n\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\tthis.update(info, [], true);\n\t\t});\n\t\tready = true;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   nodes: Array<Promise<CSRComponent>>;\n\t *   page: import('types/page').Page;\n\t * }} selected\n\t */\n\tasync start({ status, error, nodes, page }) {\n\t\t/** @type {import('./types').BranchNode[]} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet context = {};\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tlet result;\n\n\t\t/** @type {number} */\n\t\tlet new_status;\n\n\t\t/** @type {Error} new_error */\n\t\tlet new_error;\n\n\t\ttry {\n\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\tconst node = await this._load_node({\n\t\t\t\t\tmodule: await nodes[i],\n\t\t\t\t\tpage,\n\t\t\t\t\tcontext,\n\t\t\t\t\tstatus: is_leaf && status,\n\t\t\t\t\terror: is_leaf && error\n\t\t\t\t});\n\n\t\t\t\tbranch.push(node);\n\n\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\tnew_status = node.loaded.status;\n\t\t\t\t\t\tnew_error = node.loaded.error;\n\t\t\t\t\t} else if (node.loaded.context) {\n\t\t\t\t\t\tcontext = {\n\t\t\t\t\t\t\t...context,\n\t\t\t\t\t\t\t...node.loaded.context\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = await this._get_navigation_result_from_branch({ page, branch });\n\t\t} catch (e) {\n\t\t\tif (error) throw e;\n\n\t\t\tnew_status = 500;\n\t\t\tnew_error = e;\n\t\t}\n\n\t\tif (new_error) {\n\t\t\tresult = await this._load_error({\n\t\t\t\tstatus: new_status,\n\t\t\t\terror: new_error,\n\t\t\t\tpath: page.path,\n\t\t\t\tquery: page.query\n\t\t\t});\n\t\t}\n\n\t\tif (result.redirect) {\n\t\t\t// this is a real edge case â€” `load` would need to return\n\t\t\t// a redirect but only in the browser\n\t\t\tlocation.href = new URL(result.redirect, location.href).href;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._init(result);\n\t}\n\n\t/** @param {{ path: string, query: URLSearchParams }} destination */\n\tnotify({ path, query }) {\n\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-start'));\n\n\t\tif (this.started) {\n\t\t\tthis.stores.navigating.set({\n\t\t\t\tfrom: {\n\t\t\t\t\tpath: this.current.page.path,\n\t\t\t\t\tquery: this.current.page.query\n\t\t\t\t},\n\t\t\t\tto: {\n\t\t\t\t\tpath,\n\t\t\t\t\tquery\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t */\n\tasync update(info, chain, no_cache) {\n\t\tconst token = (this.token = {});\n\t\tlet navigation_result = await this._get_navigation_result(info, no_cache);\n\n\t\t// abort if user navigated during update\n\t\tif (token !== this.token) return;\n\n\t\tthis.invalid.clear();\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (chain.length > 10 || chain.includes(info.path)) {\n\t\t\t\tnavigation_result = await this._load_error({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\tpath: info.path,\n\t\t\t\t\tquery: info.query\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (this.router) {\n\t\t\t\t\tthis.router.goto(navigation_result.redirect, { replaceState: true }, [\n\t\t\t\t\t\t...chain,\n\t\t\t\t\t\tinfo.path\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = new URL(navigation_result.redirect, location.href).href;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (navigation_result.reload) {\n\t\t\tlocation.reload();\n\t\t} else if (this.started) {\n\t\t\tthis.current = navigation_result.state;\n\n\t\t\tthis.root.$set(navigation_result.props);\n\t\t\tthis.stores.navigating.set(null);\n\n\t\t\tawait 0;\n\t\t} else {\n\t\t\tthis._init(navigation_result);\n\t\t}\n\n\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-end'));\n\t\tthis.loading.promise = null;\n\t\tthis.loading.id = null;\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\tif (leaf_node && leaf_node.module.router === false) {\n\t\t\tthis.router.disable();\n\t\t} else {\n\t\t\tthis.router.enable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tload(info) {\n\t\tthis.loading.promise = this._get_navigation_result(info, false);\n\t\tthis.loading.id = info.id;\n\n\t\treturn this.loading.promise;\n\t}\n\n\t/** @param {string} href */\n\tinvalidate(href) {\n\t\tthis.invalid.add(href);\n\n\t\tif (!this.invalidating) {\n\t\t\tthis.invalidating = Promise.resolve().then(async () => {\n\t\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\t\tawait this.update(info, [], true);\n\n\t\t\t\tthis.invalidating = null;\n\t\t\t});\n\t\t}\n\n\t\treturn this.invalidating;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\t_init(result) {\n\t\tthis.current = result.state;\n\n\t\tconst style = document.querySelector('style[data-svelte]');\n\t\tif (style) style.remove();\n\n\t\tthis.root = new this.Root({\n\t\t\ttarget: this.target,\n\t\t\tprops: {\n\t\t\t\tstores: this.stores,\n\t\t\t\t...result.props\n\t\t\t},\n\t\t\thydrate: true\n\t\t});\n\n\t\tthis.started = true;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _get_navigation_result(info, no_cache) {\n\t\tif (this.loading.id === info.id) {\n\t\t\treturn this.loading.promise;\n\t\t}\n\n\t\tfor (let i = 0; i < info.routes.length; i += 1) {\n\t\t\tconst route = info.routes[i];\n\n\t\t\tif (route.length === 1) {\n\t\t\t\treturn { reload: true };\n\t\t\t}\n\n\t\t\t// load code for subsequent routes immediately, if they are as\n\t\t\t// likely to match the current path/query as the current one\n\t\t\tlet j = i + 1;\n\t\t\twhile (j < info.routes.length) {\n\t\t\t\tconst next = info.routes[j];\n\t\t\t\tif (next[0].toString() === route[0].toString()) {\n\t\t\t\t\tif (next.length !== 1) next[1].forEach((loader) => loader());\n\t\t\t\t\tj += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = await this._load(\n\t\t\t\t{\n\t\t\t\t\troute,\n\t\t\t\t\tpath: info.path,\n\t\t\t\t\tquery: info.query\n\t\t\t\t},\n\t\t\t\tno_cache\n\t\t\t);\n\t\t\tif (result) return result;\n\t\t}\n\n\t\treturn await this._load_error({\n\t\t\tstatus: 404,\n\t\t\terror: new Error(`Not found: ${info.path}`),\n\t\t\tpath: info.path,\n\t\t\tquery: info.query\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   page: import('types/page').Page;\n\t *   branch: import('./types').BranchNode[]\n\t * }} opts\n\t */\n\tasync _get_navigation_result_from_branch({ page, branch }) {\n\t\tconst filtered = branch.filter(Boolean);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tstate: {\n\t\t\t\tpage,\n\t\t\t\tbranch,\n\t\t\t\tsession_id: this.session_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tif (filtered[i].loaded) result.props[`props_${i}`] = await filtered[i].loaded.props;\n\t\t}\n\n\t\tif (\n\t\t\t!this.current.page ||\n\t\t\tpage.path !== this.current.page.path ||\n\t\t\tpage.query.toString() !== this.current.page.query.toString()\n\t\t) {\n\t\t\tresult.props.page = page;\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst maxage = leaf.loaded && leaf.loaded.maxage;\n\n\t\tif (maxage) {\n\t\t\tconst key = `${page.path}?${page.query}`;\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (this.cache.get(key) === result) {\n\t\t\t\t\tthis.cache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, maxage * 1000);\n\n\t\t\tconst unsubscribe = this.stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tthis.cache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: CSRComponent;\n\t *   page: import('types/page').Page;\n\t *   context: Record<string, any>;\n\t * }} options\n\t * @returns\n\t */\n\tasync _load_node({ status, error, module, page, context }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\tpath: false,\n\t\t\t\tquery: false,\n\t\t\t\tsession: false,\n\t\t\t\tcontext: false,\n\t\t\t\tdependencies: []\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tcontext\n\t\t};\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {};\n\t\tfor (const key in page.params) {\n\t\t\tObject.defineProperty(params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn page.params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = this.$session;\n\n\t\tif (module.load) {\n\t\t\tconst { started } = this;\n\n\t\t\t/** @type {import('types/page').LoadInput | import('types/page').ErrorLoadInput} */\n\t\t\tconst load_input = {\n\t\t\t\tpage: {\n\t\t\t\t\thost: page.host,\n\t\t\t\t\tparams,\n\t\t\t\t\tget path() {\n\t\t\t\t\t\tnode.uses.path = true;\n\t\t\t\t\t\treturn page.path;\n\t\t\t\t\t},\n\t\t\t\t\tget query() {\n\t\t\t\t\t\tnode.uses.query = true;\n\t\t\t\t\t\treturn page.query;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget context() {\n\t\t\t\t\tnode.uses.context = true;\n\t\t\t\t\treturn { ...context };\n\t\t\t\t},\n\t\t\t\tfetch(resource, info) {\n\t\t\t\t\tconst url = typeof resource === 'string' ? resource : resource.url;\n\t\t\t\t\tconst { href } = new URL(url, new URL(page.path, document.baseURI));\n\t\t\t\t\tnode.uses.dependencies.push(href);\n\n\t\t\t\t\treturn started ? fetch(resource, info) : initial_fetch(resource, info);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (error) {\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).status = status;\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).error = error;\n\t\t\t}\n\n\t\t\tconst loaded = await module.load.call(null, load_input);\n\n\t\t\t// if the page component returns nothing from load, fall through\n\t\t\tif (!loaded) return;\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.context) node.context = node.loaded.context;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationCandidate} selected\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _load({ route, path, query }, no_cache) {\n\t\tconst key = `${path}?${query}`;\n\n\t\tif (!no_cache && this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tconst [pattern, a, b, get_params] = route;\n\t\tconst params = get_params ? get_params(pattern.exec(path)) : {};\n\n\t\tconst changed = this.current.page && {\n\t\t\tpath: path !== this.current.page.path,\n\t\t\tparams: Object.keys(params).filter((key) => this.current.page.params[key] !== params[key]),\n\t\t\tquery: query.toString() !== this.current.page.query.toString(),\n\t\t\tsession: this.session_id !== this.current.session_id\n\t\t};\n\n\t\t/** @type {import('types/page').Page} */\n\t\tconst page = { host: this.host, path, query, params };\n\n\t\t/** @type {import('./types').BranchNode[]} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet context = {};\n\t\tlet context_changed = false;\n\n\t\t/** @type {number} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error} */\n\t\tlet error = null;\n\n\t\t// preload modules\n\t\ta.forEach((loader) => loader());\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = this.current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.path && previous.uses.path) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.query && previous.uses.query) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tprevious.uses.dependencies.some((dep) => this.invalid.has(dep)) ||\n\t\t\t\t\t(context_changed && previous.uses.context);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\tnode = await this._load_node({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t});\n\n\t\t\t\t\tconst is_leaf = i === a.length - 1;\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tredirect: node.loaded.redirect\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.context) {\n\t\t\t\t\t\t\tcontext_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (is_leaf && module.load) {\n\t\t\t\t\t\t// if the leaf node has a `load` function\n\t\t\t\t\t\t// that returns nothing, fall through\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await this._load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\t\tcontext: node_loaded.context\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded.loaded.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch.push(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await this._load_error({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\tpath,\n\t\t\t\t\tquery\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node && node.loaded && node.loaded.context) {\n\t\t\t\t\tcontext = {\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\t...node.loaded.context\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await this._get_navigation_result_from_branch({ page, branch });\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   path: string;\n\t *   query: URLSearchParams\n\t * }} opts\n\t */\n\tasync _load_error({ status, error, path, query }) {\n\t\tconst page = {\n\t\t\thost: this.host,\n\t\t\tpath,\n\t\t\tquery,\n\t\t\tparams: {}\n\t\t};\n\n\t\tconst node = await this._load_node({\n\t\t\tmodule: await this.fallback[0],\n\t\t\tpage,\n\t\t\tcontext: {}\n\t\t});\n\n\t\tconst branch = [\n\t\t\tnode,\n\t\t\tawait this._load_node({\n\t\t\t\tstatus,\n\t\t\t\terror,\n\t\t\t\tmodule: await this.fallback[1],\n\t\t\t\tpage,\n\t\t\t\tcontext: node && node.loaded && node.loaded.context\n\t\t\t})\n\t\t];\n\n\t\treturn await this._get_navigation_result_from_branch({ page, branch });\n\t}\n}\n\n// @ts-ignore\n\n/** @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Node;\n *   session: any;\n *   host: string;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types/internal').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: Array<Promise<import('types/internal').CSRComponent>>;\n *     page: import('types/page').Page;\n *   };\n * }} opts */\nasync function start({ paths, target, session, host, route, spa, trailing_slash, hydrate }) {\n\tif (import.meta.env.DEV && !target) {\n\t\tthrow new Error('Missing target element. See https://kit.svelte.dev/docs#configuration-target');\n\t}\n\n\tconst router =\n\t\troute &&\n\t\tnew Router({\n\t\t\tbase: paths.base,\n\t\t\troutes,\n\t\t\ttrailing_slash\n\t\t});\n\n\tconst renderer = new Renderer({\n\t\tRoot,\n\t\tfallback,\n\t\ttarget,\n\t\tsession,\n\t\thost\n\t});\n\n\tinit(router);\n\tset_paths(paths);\n\n\tif (hydrate) await renderer.start(hydrate);\n\tif (route) router.init(renderer);\n\n\tif (spa) router.goto(location.href, { replaceState: true }, []);\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"names":[],"mappings":"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"}